<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.anti.theft.dao.BlackListLogDao">
  <resultMap id="BaseResultMap" type="com.anti.theft.entity.BlackListLog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="openid" jdbcType="VARCHAR" property="openid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="idCard" jdbcType="VARCHAR" property="idCard" />
    <result column="photo" jdbcType="VARCHAR" property="photo" />
    <result column="frontPhoto" jdbcType="VARCHAR" property="frontPhoto" />
    <result column="backPhoto" jdbcType="VARCHAR" property="backPhoto" />
    <result column="imei" jdbcType="VARCHAR" property="imei" />
    <result column="queryTime" jdbcType="TIMESTAMP" property="queryTime" />
    <result column="queryAddress" jdbcType="VARCHAR" property="queryAddress" />
    <result column="longitude" jdbcType="VARCHAR" property="longitude" />
    <result column="latitude" jdbcType="VARCHAR" property="latitude" />
    <result column="queryResult" jdbcType="INTEGER" property="queryResult" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, openid, `name`, idCard, photo, frontPhoto, backPhoto, imei, queryTime, queryAddress, 
    longitude, latitude, queryResult
  </sql>
  <select id="selectByExample" parameterType="com.anti.theft.entity.BlackListLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from black_list_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from black_list_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from black_list_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.anti.theft.entity.BlackListLogExample">
    delete from black_list_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.anti.theft.entity.BlackListLog">
    insert into black_list_log (id, openid, `name`, 
      idCard, photo, frontPhoto, 
      backPhoto, imei, queryTime, 
      queryAddress, longitude, latitude, 
      queryResult)
    values (#{id,jdbcType=INTEGER}, #{openid,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{idCard,jdbcType=VARCHAR}, #{photo,jdbcType=VARCHAR}, #{frontPhoto,jdbcType=VARCHAR}, 
      #{backPhoto,jdbcType=VARCHAR}, #{imei,jdbcType=VARCHAR}, #{queryTime,jdbcType=TIMESTAMP}, 
      #{queryAddress,jdbcType=VARCHAR}, #{longitude,jdbcType=VARCHAR}, #{latitude,jdbcType=VARCHAR}, 
      #{queryResult,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.anti.theft.entity.BlackListLog">
    insert into black_list_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="openid != null">
        openid,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="idCard != null">
        idCard,
      </if>
      <if test="photo != null">
        photo,
      </if>
      <if test="frontPhoto != null">
        frontPhoto,
      </if>
      <if test="backPhoto != null">
        backPhoto,
      </if>
      <if test="imei != null">
        imei,
      </if>
      <if test="queryTime != null">
        queryTime,
      </if>
      <if test="queryAddress != null">
        queryAddress,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="queryResult != null">
        queryResult,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="openid != null">
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="photo != null">
        #{photo,jdbcType=VARCHAR},
      </if>
      <if test="frontPhoto != null">
        #{frontPhoto,jdbcType=VARCHAR},
      </if>
      <if test="backPhoto != null">
        #{backPhoto,jdbcType=VARCHAR},
      </if>
      <if test="imei != null">
        #{imei,jdbcType=VARCHAR},
      </if>
      <if test="queryTime != null">
        #{queryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="queryAddress != null">
        #{queryAddress,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=VARCHAR},
      </if>
      <if test="queryResult != null">
        #{queryResult,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.anti.theft.entity.BlackListLogExample" resultType="java.lang.Long">
    select count(*) from black_list_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update black_list_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.openid != null">
        openid = #{record.openid,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.idCard != null">
        idCard = #{record.idCard,jdbcType=VARCHAR},
      </if>
      <if test="record.photo != null">
        photo = #{record.photo,jdbcType=VARCHAR},
      </if>
      <if test="record.frontPhoto != null">
        frontPhoto = #{record.frontPhoto,jdbcType=VARCHAR},
      </if>
      <if test="record.backPhoto != null">
        backPhoto = #{record.backPhoto,jdbcType=VARCHAR},
      </if>
      <if test="record.imei != null">
        imei = #{record.imei,jdbcType=VARCHAR},
      </if>
      <if test="record.queryTime != null">
        queryTime = #{record.queryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.queryAddress != null">
        queryAddress = #{record.queryAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.longitude != null">
        longitude = #{record.longitude,jdbcType=VARCHAR},
      </if>
      <if test="record.latitude != null">
        latitude = #{record.latitude,jdbcType=VARCHAR},
      </if>
      <if test="record.queryResult != null">
        queryResult = #{record.queryResult,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update black_list_log
    set id = #{record.id,jdbcType=INTEGER},
      openid = #{record.openid,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      idCard = #{record.idCard,jdbcType=VARCHAR},
      photo = #{record.photo,jdbcType=VARCHAR},
      frontPhoto = #{record.frontPhoto,jdbcType=VARCHAR},
      backPhoto = #{record.backPhoto,jdbcType=VARCHAR},
      imei = #{record.imei,jdbcType=VARCHAR},
      queryTime = #{record.queryTime,jdbcType=TIMESTAMP},
      queryAddress = #{record.queryAddress,jdbcType=VARCHAR},
      longitude = #{record.longitude,jdbcType=VARCHAR},
      latitude = #{record.latitude,jdbcType=VARCHAR},
      queryResult = #{record.queryResult,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.anti.theft.entity.BlackListLog">
    update black_list_log
    <set>
      <if test="openid != null">
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        idCard = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="photo != null">
        photo = #{photo,jdbcType=VARCHAR},
      </if>
      <if test="frontPhoto != null">
        frontPhoto = #{frontPhoto,jdbcType=VARCHAR},
      </if>
      <if test="backPhoto != null">
        backPhoto = #{backPhoto,jdbcType=VARCHAR},
      </if>
      <if test="imei != null">
        imei = #{imei,jdbcType=VARCHAR},
      </if>
      <if test="queryTime != null">
        queryTime = #{queryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="queryAddress != null">
        queryAddress = #{queryAddress,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=VARCHAR},
      </if>
      <if test="queryResult != null">
        queryResult = #{queryResult,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.anti.theft.entity.BlackListLog">
    update black_list_log
    set openid = #{openid,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      idCard = #{idCard,jdbcType=VARCHAR},
      photo = #{photo,jdbcType=VARCHAR},
      frontPhoto = #{frontPhoto,jdbcType=VARCHAR},
      backPhoto = #{backPhoto,jdbcType=VARCHAR},
      imei = #{imei,jdbcType=VARCHAR},
      queryTime = #{queryTime,jdbcType=TIMESTAMP},
      queryAddress = #{queryAddress,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=VARCHAR},
      latitude = #{latitude,jdbcType=VARCHAR},
      queryResult = #{queryResult,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>